# .github/workflows/release.yml

name: Build and Release Next.js App

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest

    steps:
      # 1. 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. 安装 pnpm
      # 使用官方的 pnpm/action-setup action，并锁定主版本号
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10 # 推荐锁定 pnpm 的主版本

      # 3. 设置 Node.js 环境
      # 必须将 cache 设置为 'pnpm' 来让 setup-node 正确缓存 pnpm 的依赖
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm' # <-- 关键变更：缓存目标改为 pnpm

      # 4. 安装依赖
      # 使用 pnpm install。--frozen-lockfile 确保使用锁文件，等同于 npm ci
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # 5. 构建 Next.js 项目
      # 使用 pnpm 运行构建脚本
      - name: Build application
        run: pnpm run build

      # 6. 打包构建产物 (TAR.GZ for Linux/macOS)
      - name: Create release package (TAR.GZ)
        run: tar -czvf nextjs-dashboard-${{ github.ref_name }}.tar.gz .next

      # 7. 打包构建产物 (ZIP for Windows)
      - name: Create release package (ZIP)
        run: zip -r nextjs-dashboard-${{ github.ref_name }}.zip .next

      # 8. 创建 GitHub Release 并上传所有构建包
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            *.tar.gz
            *.zip
